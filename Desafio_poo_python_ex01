# Classe abstrata Funcionario
class Funcionario:
    def __init__(self, nome, salario):
        self.nome = nome
        self.salario = salario

    def get_nome(self):
        return self.nome

    def get_salario(self):
        return self.salario

    def set_salario(self, salario):
        if salario > 0:
            self.salario = salario
        else:
            print("Salário inválido")

    def calcular_pagamento(self):
        pass


# Classe Gerente, que herda de Funcionario
class Gerente(Funcionario):
    def __init__(self, nome, salario, bonus):
        super().__init__(nome, salario)
        self.bonus = bonus

    def get_bonus(self):
        return self.bonus

    def set_bonus(self, bonus):
        if bonus >= 0:
            self.bonus = bonus
        else:
            print("Bônus inválido")

    def calcular_pagamento(self):
        pagamento = self.get_salario() + self.bonus
        print("Pagamento do gerente", self.get_nome() + ":", pagamento)


# Classe Desenvolvedor, que herda de Funcionario
class Desenvolvedor(Funcionario):
    def __init__(self, nome, salario, linguagem):
        super().__init__(nome, salario)
        self.linguagem = linguagem

    def get_linguagem(self):
        return self.linguagem

    def set_linguagem(self, linguagem):
        self.linguagem = linguagem

    def calcular_pagamento(self):
        print("Pagamento do desenvolvedor", self.get_nome() + ":", self.get_salario())


# Classe Designer, que herda de Funcionario
class Designer(Funcionario):
    def __init__(self, nome, salario, especialidade):
        super().__init__(nome, salario)
        self.especialidade = especialidade

    def get_especialidade(self):
        return self.especialidade

    def set_especialidade(self, especialidade):
        self.especialidade = especialidade

    def calcular_pagamento(self):
        print("Pagamento do designer", self.get_nome() + ":", self.get_salario())


# Função principal para testar o código
def main():
    gerente = Gerente("João", 5000.0, 1000.0)
    desenvolvedor = Desenvolvedor("Maria", 3000.0, "Python")
    designer = Designer("Carlos", 2500.0, "UI/UX")

    gerente.calcular_pagamento()
    desenvolvedor.calcular_pagamento()
    designer.calcular_pagamento()


# Executa a função principal
if __name__ == "__main__":
    main()
